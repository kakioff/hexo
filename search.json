[{"title":"踩坑layui的tree组件-树形组件","url":"/2021/09/29/layui-tree/","content":"layui的树形组件， data数组配置title和children之后使用tree.getChecked('tree.id')之后返回的是空数据\n这里在data中必须加一个id才可以\ntree.render({      elem: '#test1',  //绑定元素      data: [{        title: '江西',        id: 1,        children: [{          title: '南昌',          id: 2,          children: [{            title: '高新区',            id: 3,            //…… //以此类推，可无限层级          }]        }]      },{        title: '陕西',        id: 4,        children: [{          title: '西安',          id: 4,        }]      }]    });","tags":["layui","tree组件"]},{"title":"锚点定位scrollIntoView平滑过渡","url":"/2021/09/29/scrollIntoView/","content":"\n一般网站使用的锚点定位都是使用的a标签，但是实际使用的时候会很生硬\n\n使用scrollIntoView就可以达到很好的效果,切换时有平滑过渡\n\n使用\ndocument.getElementById(\"domId\").scrollIntoView({    behavior: \"smooth\" // 平滑过渡 })\n可选API\n\n\n\n\n\napi\n必须\n描述\n\n\n\nalignToTop\nfalse\ntrue: (默认)元素的顶端将和其所在滚动区的可视区域的顶端对齐。false: 元素的底端将和其所在滚动区的可视区域的底端对齐。\n\n\nscrollIntoViewOptions\nfalse\nbehavior: 定义动画过渡效果,auto(默认)/smoothblock: 定义垂直方向的对齐,start(默认)/center/endnearest inline: 定义水平方向的对齐,start/center/end/nearest(默认)\n\n\n\n官网示例var element = document.getElementById(\"box\");element.scrollIntoView();element.scrollIntoView(false);element.scrollIntoView({block: \"end\"});element.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n\n","categories":["javascript"],"tags":["平滑过渡","scrollIntoView"]},{"title":"安装VMware,主机键盘不能用解决方法","url":"/2021/09/29/vmware-kbd/","content":"\n不是第一次出现这个问题了，记录一下\n\n右键电脑-属性-硬件-设备管理器，键盘那一项显示黄色叹号，属性显示为 由于其配置信息（注册表中的）不完整或已损坏，Windows 无法启动这个硬件设备\nVMware安装以后会在C盘program files文件夹下生成VMware文件夹，卸载以后这个文件夹并不会消失掉,删掉这个文件夹系统会提示有文件受保护或正在运行，无法删除，强制或者修复VMware以后，再次开机键盘不能用了，但是外接usb键盘也不能用\n解决方案\nwin10右键状态栏可开启 触摸键盘按钮 ，可正常打字\n\n\n右键开始，点击运行regedit.exe，进入注册表编辑器 到左边的项目栏里定位到 定位到 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E96B-E325-11CE-BFC1-08002BE10318} 这一项\n注册表里面UpperFilters这一项，右键它修改，把内容改成kbdclass，点确定，没有UpperFilters这一项的话在注册表空白处右键添加字符串名字UpperFilters项，内容写成kbdclass\n然后再右键我的 电脑→属性→硬件→设备管理器→键盘 全部右键卸载\n然后再空白处右键点扫描检测硬件改动，等两秒钟，你会发现键盘可以用了，笔记本的话触摸板现在还不能用，现在重启电脑就可以了\n\n","tags":["VMware"]},{"title":"vue引入外部cdn报错 ‘XXX is not defined’","url":"/2021/09/29/vue-cdn/","content":"\n我在vue网站中使用了vaptcha的验证码，在index.html中引入了CDN后使用的时候出现了vaptcha is not defined试了很多别的方法引入都没用\n\n如何解决\n先正常引入js文件，index.html的script标签或者什么的。\n\n在webpack.base.conf.js中进行配置\nexternals: {\tvaptcha: 'vaptcha'}\n但是vue-cli3要在vue.config.js中配置，要是没有就新建一个文件\n&nbsp;  &nbsp; configureWebpack: {    externals: {  \t\t'vaptcha: 'vaptcha' \t}}\n\n\n使用的时候直接在vue文件中引入就好了\nimport vaptcha from \"vaptcha\"","categories":["vue"],"tags":["vue","cdn"]},{"title":"Vue切换路由模式，去掉链接后面的#","url":"/2021/09/29/vue-history/","content":"\n最近开发一个Vue项目，但是链接后面一直显示一个#，显得很不美观 只需要将vue-router的模式换成history就行了\n\n//hash就是有#的，也是默认的const router = new VueRouter({\tmode:'history',\troutes:[……],\t……})\n\n\n但是我的是vue3，这个方法没用，也没找到const router = new VueRouter 就可以用下面的方式\n\nimport {\tcreateRouter,\t//createWebHashHistory, // hash模式\tcreateWebHistory//history模式} from 'vue-router';const router = createRouter({  // history: createWebHashHistory(), // hash模式  history: createWebHistory(process.env.BASE_URL),//history模式  routes});\n\n\n现在链接显示就正常了，nice\n\n","categories":["vue"],"tags":["vue","history","vue3"]}]