<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue引入外部cdn报错 ‘XXX is not defined’</title>
      <link href="/2021/09/29/vue-cdn/"/>
      <url>/2021/09/29/vue-cdn/</url>
      
        <content type="html"><![CDATA[<pre><code>    我在vue网站中使用了[vaptcha](https://www.vaptcha.com/)的验证码，在`index.html`中引入了CDN后使用的时候出现了`vaptcha is not defined`试了很多别的方法引入都没用</code></pre><h2 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h2><ol><li><p>先正常引入js文件，index.html的script标签或者什么的。</p></li><li><p>在webpack.base.conf.js中进行配置</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">externals: {</span><br><span class="line">vaptcha: 'vaptcha'</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>但是vue-cli3要在vue.config.js中配置，要是没有就新建一个文件</p><p>&nbsp; </p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &nbsp; configureWebpack: {</span><br><span class="line">    externals: {</span><br><span class="line">  'vaptcha: 'vaptcha'</span><br><span class="line"> }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p></li></ol><p>使用的时候直接在vue文件中引入就好了</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> vaptcha <span class="keyword">from</span> <span class="string">"vaptcha"</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue切换路由模式，去掉链接后面的#</title>
      <link href="/2021/09/29/vue-history/"/>
      <url>/2021/09/29/vue-history/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近开发一个Vue项目，但是链接后面一直显示一个#，显得很不美观 只需要将<code>vue-router</code>的模式换成<code>history</code>就行了</p></blockquote><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hash就是有#的，也是默认的</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter({</span><br><span class="line"><span class="attr">mode</span>:<span class="string">'history'</span>,</span><br><span class="line"><span class="attr">routes</span>:[……],</span><br><span class="line">……</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><blockquote><p>但是我的是vue3，这个方法没用，也没找到<code>const router = new VueRouter</code> 就可以用下面的方式</p></blockquote><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> {</span><br><span class="line">createRouter,</span><br><span class="line"><span class="comment">//createWebHashHistory, // hash模式</span></span><br><span class="line">createWebHistory<span class="comment">//history模式</span></span><br><span class="line">} <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter({</span><br><span class="line">  <span class="comment">// history: createWebHashHistory(), // hash模式</span></span><br><span class="line">  <span class="attr">history</span>: createWebHistory(process.env.BASE_URL),<span class="comment">//history模式</span></span><br><span class="line">  routes</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><blockquote><p>现在链接显示就正常了，nice</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> history </tag>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>锚点定位scrollIntoView平滑过渡</title>
      <link href="/2021/09/29/scrollIntoView/"/>
      <url>/2021/09/29/scrollIntoView/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一般网站使用的锚点定位都是使用的a标签，但是实际使用的时候会很生硬</p></blockquote><p>使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView">scrollIntoView</a>就可以达到很好的效果,切换时有平滑过渡</p><ul><li><p>使用</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"domId"</span>).scrollIntoView({</span><br><span class="line">    <span class="attr">behavior</span>: <span class="string">"smooth"</span> <span class="comment">// 平滑过渡</span></span><br><span class="line"> })</span><br></pre></td></tr></tbody></table></figure></li><li><p>可选API</p></li></ul><table><thead><tr><th align="center">api</th><th align="center">必须</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">alignToTop</td><td align="center">false</td><td align="left"><strong>true</strong>: (默认)元素的顶端将和其所在滚动区的可视区域的顶端对齐。<br><strong>false</strong>: 元素的底端将和其所在滚动区的可视区域的底端对齐。</td></tr><tr><td align="center">scrollIntoViewOptions</td><td align="center">false</td><td align="left"><strong>behavior</strong>: 定义动画过渡效果,auto(默认)/smooth<br><strong>block</strong>: 定义垂直方向的对齐,start(默认)/center/endnearest <br><strong>inline</strong>: 定义水平方向的对齐,start/center/end/nearest(默认)</td></tr></tbody></table><ul><li>官网示例<figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"></span><br><span class="line">element.scrollIntoView();</span><br><span class="line">element.scrollIntoView(<span class="literal">false</span>);</span><br><span class="line">element.scrollIntoView({<span class="attr">block</span>: <span class="string">"end"</span>});</span><br><span class="line">element.scrollIntoView({<span class="attr">behavior</span>: <span class="string">"smooth"</span>, <span class="attr">block</span>: <span class="string">"end"</span>, <span class="attr">inline</span>: <span class="string">"nearest"</span>});</span><br></pre></td></tr></tbody></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平滑过渡 </tag>
            
            <tag> scrollIntoView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>踩坑layui的tree组件-树形组件</title>
      <link href="/2021/09/29/layui-tree/"/>
      <url>/2021/09/29/layui-tree/</url>
      
        <content type="html"><![CDATA[<p>layui的树形组件， data数组配置title和children之后使用<code>tree.getChecked('tree.id')</code>之后返回的是空数据</p><p>这里在data中必须加一个id才可以</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">tree.render({</span><br><span class="line">      <span class="attr">elem</span>: <span class="string">'#test1'</span>,  <span class="comment">//绑定元素</span></span><br><span class="line">      <span class="attr">data</span>: [{</span><br><span class="line">        <span class="attr">title</span>: <span class="string">'江西'</span>,</span><br><span class="line">        <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">children</span>: [{</span><br><span class="line">          <span class="attr">title</span>: <span class="string">'南昌'</span>,</span><br><span class="line">          <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">children</span>: [{</span><br><span class="line">            <span class="attr">title</span>: <span class="string">'高新区'</span>,</span><br><span class="line">            <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="comment">//…… //以此类推，可无限层级</span></span><br><span class="line">          }]</span><br><span class="line">        }]</span><br><span class="line">      },{</span><br><span class="line">        <span class="attr">title</span>: <span class="string">'陕西'</span>,</span><br><span class="line">        <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">children</span>: [{</span><br><span class="line">          <span class="attr">title</span>: <span class="string">'西安'</span>,</span><br><span class="line">          <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">        }]</span><br><span class="line">      }]</span><br><span class="line">    });</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> layui </tag>
            
            <tag> tree组件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装VMware,主机键盘不能用解决方法</title>
      <link href="/2021/09/29/vmware-kbd/"/>
      <url>/2021/09/29/vmware-kbd/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不是第一次出现这个问题了，记录一下</p></blockquote><p>右键电脑-属性-硬件-设备管理器，键盘那一项显示黄色叹号，属性显示为 由于其配置信息（注册表中的）不完整或已损坏，Windows 无法启动这个硬件设备</p><p>VMware安装以后会在C盘<code>program files</code>文件夹下生成<code>VMware</code>文件夹，卸载以后这个文件夹并不会消失掉,删掉这个文件夹系统会提示有文件受保护或正在运行，无法删除，强制或者修复VMware以后，再次开机键盘不能用了，但是外接usb键盘也不能用</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><blockquote><p>win10右键状态栏可开启 触摸键盘按钮 ，可正常打字</p></blockquote><ol><li>右键开始，点击运行<code>regedit.exe</code>，进入注册表编辑器 到左边的项目栏里定位到 定位到 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E96B-E325-11CE-BFC1-08002BE10318}</code> 这一项</li><li>注册表里面<code>UpperFilters</code>这一项，右键它修改，把内容改成<code>kbdclass</code>，点确定，没有<code>UpperFilters</code>这一项的话在注册表空白处右键添加字符串名字<code>UpperFilters</code>项，内容写成<code>kbdclass</code></li><li>然后再右键我的 电脑→属性→硬件→设备管理器→键盘 全部右键卸载</li><li>然后再空白处右键点扫描检测硬件改动，等两秒钟，你会发现键盘可以用了，笔记本的话触摸板现在还不能用，现在重启电脑就可以了</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
